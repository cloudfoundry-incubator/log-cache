syntax = "proto3";

package logcache.v1;

import "google/api/annotations.proto";
import "v2/envelope.proto";
import "egress.proto";

// The ShardGroupReader service is used to read data from the LogCache system
// via groups of source IDs.
service ShardGroupReader {
    rpc SetShardGroup(SetShardGroupRequest) returns (SetShardGroupResponse) {
        option (google.api.http) = {
            put: "/v1/shard_group/{name}"
            body: "sub_group"
        };
    }

    rpc Read(ShardGroupReadRequest) returns (ShardGroupReadResponse) {
        option (google.api.http) = {
            get: "/v1/shard_group/{name}"
        };
    }

    rpc ShardGroup(ShardGroupRequest) returns (ShardGroupResponse) {
        option (google.api.http) = {
            get: "/v1/shard_group/{name}/meta"
        };
    }
}

message SetShardGroupRequest {
    string name = 1;

    GroupedSourceIds sub_group = 2;

    // local_only is used for internals only. A client should not set this.
    bool local_only = 3;
}

message GroupedSourceIds {
    repeated string source_ids = 1;

    // arg are given back to the requester when they recieve the given
    // sub_group.
    string arg = 2;
}

message SetShardGroupResponse {
}

message ShardGroupReadRequest {
    string name = 1;
    uint64 requester_id = 2;

    int64 start_time = 3;
    int64 end_time = 4;
    int64 limit = 5;
    repeated EnvelopeType envelope_types = 6;

    // local_only is used for internals only. A client should not set this.
    bool local_only = 7;
}

message ShardGroupReadResponse {
    loggregator.v2.EnvelopeBatch envelopes = 1;

    // args are given back to the requester when they recieve the given
    // sub_group.
    repeated string args = 2;
}

message ShardGroupRequest {
    string name = 1;

    // local_only is used for internals only. A client should not set this.
    bool local_only = 2;
}

message ShardGroupResponse {
    repeated GroupedSourceIds sub_groups = 1;
    repeated uint64 requester_ids = 2;
    repeated string args = 3;
}

